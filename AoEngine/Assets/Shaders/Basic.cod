//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gViewProj;                 // Offset:   64, size:   64
}

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 Basic
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gViewProj;                // Offset:   64 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float       
                // COLOR                    0   xyzw        2     NONE   float       
                // TEXCOORD                 0   xy          3     NONE   float       
                // TANGENT                  0   xyz         4     NONE   float       
                // BINORMAL                 0   xyz         5     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_temps 7
                //
                // Initial variable locations:
                //   v0.x <- VIn.Position.x; v0.y <- VIn.Position.y; v0.z <- VIn.Position.z; 
                //   v1.x <- VIn.Normal.x; v1.y <- VIn.Normal.y; v1.z <- VIn.Normal.z; 
                //   v2.x <- VIn.Color.x; v2.y <- VIn.Color.y; v2.z <- VIn.Color.z; v2.w <- VIn.Color.w; 
                //   v3.x <- VIn.TextureUV.x; v3.y <- VIn.TextureUV.y; 
                //   v4.x <- VIn.Tangent.x; v4.y <- VIn.Tangent.y; v4.z <- VIn.Tangent.z; 
                //   v5.x <- VIn.BiNormal.x; v5.y <- VIn.BiNormal.y; v5.z <- VIn.BiNormal.z; 
                //   o1.x <- <VS return value>.WorldPosition.x; o1.y <- <VS return value>.WorldPosition.y; o1.z <- <VS return value>.WorldPosition.z; 
                //   o0.x <- <VS return value>.Position.x; o0.y <- <VS return value>.Position.y; o0.z <- <VS return value>.Position.z; o0.w <- <VS return value>.Position.w
                //
                #line 26 "D:\Project\Developement\Live\AoEngine\AoEngine\Assets\Shaders\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- VOut.WorldPosition.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- VOut.WorldPosition.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- VOut.WorldPosition.z
                mul r2.xyzw, cb0[0].xyzw, cb0[4].xxxx
                mul r3.xyzw, cb0[1].xyzw, cb0[4].yyyy
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[2].xyzw, cb0[4].zzzz
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[3].xyzw, cb0[4].wwww
                add r2.xyzw, r2.xyzw, r3.xyzw
                mul r3.xyzw, cb0[0].xyzw, cb0[5].xxxx
                mul r4.xyzw, cb0[1].xyzw, cb0[5].yyyy
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[2].xyzw, cb0[5].zzzz
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[3].xyzw, cb0[5].wwww
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[0].xyzw, cb0[6].xxxx
                mul r5.xyzw, cb0[1].xyzw, cb0[6].yyyy
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, cb0[2].xyzw, cb0[6].zzzz
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, cb0[3].xyzw, cb0[6].wwww
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, cb0[0].xyzw, cb0[7].xxxx
                mul r6.xyzw, cb0[1].xyzw, cb0[7].yyyy
                add r5.xyzw, r5.xyzw, r6.xyzw
                mul r6.xyzw, cb0[2].xyzw, cb0[7].zzzz
                add r5.xyzw, r5.xyzw, r6.xyzw
                mul r6.xyzw, cb0[3].xyzw, cb0[7].wwww
                add r5.xyzw, r5.xyzw, r6.xyzw
                dp4 r2.x, r0.xyzw, r2.xyzw  // r2.x <- VOut.Position.x
                dp4 r2.y, r0.xyzw, r3.xyzw  // r2.y <- VOut.Position.y
                dp4 r2.z, r0.xyzw, r4.xyzw  // r2.z <- VOut.Position.z
                dp4 r2.w, r0.xyzw, r5.xyzw  // r2.w <- VOut.Position.w
                mov o0.xyzw, r2.xyzw
                mov o1.xyz, r1.xyzx
                ret 
                // Approximately 40 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_output o0.xyzw
                //
                // Initial variable locations:
                //   v0.x <- VOut.Position.x; v0.y <- VOut.Position.y; v0.z <- VOut.Position.z; v0.w <- VOut.Position.w; 
                //   v1.x <- VOut.WorldPosition.x; v1.y <- VOut.WorldPosition.y; v1.z <- VOut.WorldPosition.z; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 34 "D:\Project\Developement\Live\AoEngine\AoEngine\Assets\Shaders\Basic.fx"
                mov o0.xyzw, l(0,1.000000,0,1.000000)
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

    }

}

